<Window 
       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
       xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" 
       Title="FloPy" Height="550" Width="970" SizeToContent="Manual" WindowStartupLocation="CenterScreen" Closed="exit" WindowStyle="SingleBorderWindow">
    <Window.Icon>
        <BitmapImage UriSource="Resources/floPy Icon.ico"/>
    </Window.Icon>
    <Grid >

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="150" MaxWidth="200"/>
            <ColumnDefinition Width="2*" MinWidth="400"/>
            <ColumnDefinition Width="3.5*" MinWidth="400"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="22"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Menu IsMainMenu="True" Grid.Row="0" Grid.ColumnSpan="3">
            <Menu.Background>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.MenuColorKey}}"/>
            </Menu.Background>
            <MenuItem Header="_File">
                <MenuItem Header="_New" Click="newFile"/>   
                <MenuItem Header="_Open" Click="openFile"/>
                <MenuItem Header="_Save" Click="saveFile"/>
                <MenuItem Header="Save _As" Click="saveFileAs"/>
                <Separator />
                <MenuItem Header="Exit" Click="exit"/>
            </MenuItem>
            <MenuItem Header="_Edit" >
                <MenuItem Header="_Cut" Command="Cut"/>
                <MenuItem Header="_Copy" Command="Copy"/>
                <MenuItem Header="_Paste" Command="Paste"/>
                <MenuItem Header="_Redo" Command="Redo"/>
                <MenuItem Header="_Undo" Command="Undo"/>
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem Header="_Refresh Flow Chart" Click="refreshEverything"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_About" Click="openAboutWindow" />
                <MenuItem Header="_Tutorial" Click="openTutorial" IsEnabled="False" />
            </MenuItem>
        </Menu>

        <!-- Grid to Display the Main Toolbar on the Left side -->
        <Grid Grid.Column="0" Grid.Row="1" x:Name="ToolBar" Grid.IsSharedSizeScope="True">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <!-- Ellipse/Start/End Button -->
            <Button Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="97" Padding="5" ToolTip="Ellipse - Start/End of Flow" x:Name="ovalButton" Click="CreateEllipse" Height="47">
                <!--<Ellipse Height="35" Width="85" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="Black" StrokeThickness="2"/>-->
                <Border BorderBrush="Black" Height="35" Width="85" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="2" CornerRadius="100" IsHitTestVisible="False">
                    <Label Content="Start/End" HorizontalAlignment="Center" Grid.Row="0" VerticalAlignment="Center" IsHitTestVisible="False" Height="26" Width="59"/>
                </Border>
            </Button>
            <!--<Label Content="Start/End" HorizontalAlignment="Center" Grid.Row="0" VerticalAlignment="Center" IsHitTestVisible="False" Height="26" Width="59"/>-->

            <!-- Rectangle/Procedural Button -->
            <Button HorizontalAlignment="Center" Grid.Row="1" VerticalAlignment="Center" Width="98" Padding="5" ToolTip="Rectangle - Procedural Statement(s)" x:Name="rectButton" Click="CreateRectangle" Height="47">
                <!--<Rectangle Height="35" Stroke="Black" StrokeThickness="2" Width="85"/>-->
                <Border Height="35" BorderBrush="Black" BorderThickness="2" Width="85">
                    <Label Content="Procedural" HorizontalAlignment="Center" Grid.Row="1" VerticalAlignment="Center" IsHitTestVisible="False" Height="33" Width="83" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                </Border>
            </Button>
            <!--<Label Content="Procedural" HorizontalAlignment="Center" Grid.Row="1" VerticalAlignment="Center" IsHitTestVisible="False" Height="33" Width="83" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>-->

            <!-- Parallelogram/I/O Button -->
            <Button HorizontalAlignment="Center" Grid.Row="2" VerticalAlignment="Center" Width="98" Padding="5" ToolTip="Parallelagram - I/O Statement" x:Name="paraButton" Click="CreatePara" Height="47" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                <!--<Rectangle Height="35" Stroke="Black" StrokeThickness="2" Width="80" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform AngleY="0" AngleX="-20"/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>-->
                <Border Height="35" BorderBrush="Black" BorderThickness="2" Width="80" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                    <Border.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform AngleX="-17"/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Border.RenderTransform>
                    <Label Content="I/O" HorizontalAlignment="Center" Grid.Row="2" VerticalAlignment="Center" IsHitTestVisible="False" Height="26" Width="89" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" RenderTransformOrigin="0.5,0.5">
                        <Label.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform AngleX="17"/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Label.RenderTransform>
                    </Label>
                </Border>
            </Button>
            <!--<Label Content="I/O" HorizontalAlignment="Center" Grid.Row="2" VerticalAlignment="Center" IsHitTestVisible="False" Height="26" Width="89" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>-->

            <!-- Diamond/Conditional Button -->
            <Label Content="Conditional" HorizontalAlignment="Center" Grid.Row="3" VerticalAlignment="Center" IsHitTestVisible="False" Height="33" Width="83" FontSize="10" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Panel.ZIndex="1"/>
            <Button HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="3" Width="98" Padding="5" ToolTip="Diamond - Conditional Statement" x:Name="diamondButton" Click="CreateDiamond">
                <Polygon Height="35" Stroke="Black" StrokeThickness="2" Width="85" Points="2,17.5 42.5,2 83,17.5 42.5,33"/>
            </Button>
            <Label Content="Toolbar" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FF8B8B8B"/>
        </Grid>

        <GridSplitter Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Width="5" ShowsPreview="True" IsEnabled="False" Height="{DynamicResource {x:Static SystemParameters.VirtualScreenHeightKey}}">
            <GridSplitter.Background>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
            </GridSplitter.Background>
        </GridSplitter>

        <!-- ScrollViewer Displays the main area where the flow chart will be -->
        <Label Content="Flow Chart" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FF8B8B8B" Grid.Row="1" Grid.Column="1" Panel.ZIndex="-1"/>
        <ScrollViewer Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Panel.ZIndex="-2" Grid.IsSharedSizeScope="True" HorizontalScrollBarVisibility="Auto" PanningMode="Both">
            <ScrollViewer.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFE2E2E2" Offset="1"/>
                    <GradientStop Color="White"/>
                </LinearGradientBrush>
            </ScrollViewer.Background>

            <!-- Main area where the flow chart will be produced -->
            <Grid x:Name="flowView" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto"/>
        </ScrollViewer>


        <!-- The main TextBox where the python code will be seen and edited -->
        <ScrollViewer x:Name="scrollViewer" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True" PanningMode="Both">
            <TextBox x:Name="FileText" AcceptsTab="True" AcceptsReturn="True" AutoWordSelection="True" TextOptions.TextFormattingMode="Display" BorderThickness="0" ScrollViewer.CanContentScroll="True" Width="{Binding ActualWidth, ElementName=scrollViewer, Mode=OneWay}" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Height="{Binding ActualHeight, ElementName=scrollViewer, Mode=OneWay}" LostKeyboardFocus="refreshEverything"/>
            <!--<RichTextBox x:Name="FileText" AcceptsTab="True" AcceptsReturn="True" AutoWordSelection="True" TextOptions.TextFormattingMode="Display" BorderThickness="0" ScrollViewer.CanContentScroll="True" Width="{Binding ActualWidth, ElementName=scrollViewer, Mode=OneWay}" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Height="{Binding ActualHeight, ElementName=scrollViewer, Mode=OneWay}" IsDocumentEnabled="True">
                <FlowDocument/>
            </RichTextBox>-->
        </ScrollViewer>


    </Grid>
</Window>
